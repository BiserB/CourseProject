@model EventFullModel
@{
    ViewData["Title"] = "Display";
    ViewData["Header"] = Model.Title;
}

<div class="row height80">

    <div class="col-md-6 bright-bg">
        <div class="row paradiso-bg swans">
            <h4 class="ml-auto mr-auto">Incoming: </h4>
            <input type="hidden" id="EventCode" value="@Model.EventCode">
        </div>
        <div class="row">
            <div id="posts" class="questions">
                @{
                    if (!Model.ActiveQuestions.Any())
                    {
                        <div id="no-questions">
                            <p class="h5 text-muted text-center m-5">No questions for review</p>
                            <p class="h5 text-muted text-center m-5">Code for event: @Model.EventCode</p>
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(m => m.ActiveQuestions, "QuestionFullModelCollection")
                    }
                }
            </div>
        </div>
    </div>

    <div class="col-md-6 swans-bg border-left">
        <div class="row paradiso-bg swans">
            <h4 class="ml-auto mr-auto">Archived: </h4>
        </div>
        <div class="row">
            <div id="posts" class="questions">
                @Html.DisplayFor(m => m.ArchivedQuestions, "ArchivedQuestions")
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script src="~/lib/browser/signalr.js"></script>
    <script>
        (async function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/questions")
                .build();

            connection.on("Callback", (questionContent, publishedOn, authorName, id, replies) => {

                var message = document.getElementById('no-questions');

                if (message !== null) {
                    message.parentNode.removeChild(message);
                }

                var postHtml = [
                    '<div class="mr-3">' + questionContent + '</div>',
                    '<div class="row ml-0"><span class="content-mutted">' + publishedOn + '</span>',
                    '<span class="ml-3">' + authorName + '</span>',
                    '<div class="ml-auto mr-5"> <div class="row"> ',
                    '<form action="/manager/questions/delete" method="post" class="mx-1">',
                    '<input value=' + id + ' type="hidden" name="Id" />',
                    '<input value="@Model.Id" type="hidden" name="eventId" />',
                    '<input value="@Model.EventCode" type="hidden" name="eventCode">',
                    '<input type="submit" class="btn btn-sm btn-outline-info mx-1" value="Arc" formaction="/manager/questions/archive" />',
                    '<input type="submit" class="btn btn-sm btn-outline-info" value="Del" />',
                    '</form></div></div></div> <hr class="style5" />'
                ].join('');

                var identificator = "question";

                var div = document.createElement('div');

                div.setAttribute('id', identificator);

                div.innerHTML = postHtml;

                document.getElementById('posts').appendChild(div);
            });

            connection.on("AddReply", (reply) => {

                var replyHtml = [
                    '<div class="row replies">',
                    '<span>' + reply.replyContent + '</span>',
                    '<span class="ml-auto paradiso">' + reply.replyAuthor + '</span></div><hr class="style4" />'
                ].join('');

                var repliesButton = [
                    '<a class="mx-2" data-toggle="collapse" href="#repliesFor' + reply.questionId +
                    '" role="button" aria-expanded="false" aria-controls="repliesFor' + reply.questionId + '">',
                    '<span class="font-weight-bold px-2">R</span></a>'
                ].join('');

                var button = "button" + reply.questionId;

                document.getElementById(button).innerHTML = repliesButton;

                var replyDiv = document.createElement('div');

                replyDiv.innerHTML = replyHtml;

                var identifictor = "repliesFor" + reply.questionId;

                document.getElementById(identifictor).appendChild(replyDiv);

            });

            await connection.start();

            var eventCode = document.getElementById("EventCode").value;

            await connection.invoke("JoinToGroup", eventCode);

        })();
    </script>
}